---
- name: Playbook to parse webhook event data from NetBox Config Context Update
  connection: local
  hosts: localhost
  vars:
    netbox_url: "{{ lookup('ansible.builtin.env', 'NETBOX_API', default=undef()) }}"
    netbox_token: "{{ lookup('ansible.builtin.env', 'NETBOX_TOKEN', default=undef()) }}"
    controller_host: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST', default=undef()) }}"
    controller_oauth_token: "{{ lookup('ansible.builtin.env', 'CONTROLLER_OAUTH_TOKEN', default=undef()) }}"
    controller_verify_ssl: "{{ lookup('ansible.builtin.env', 'CONTROLLER_VERIFY_SSL', default=undef()) }}"

  module_defaults:
    group/netbox.netbox.netbox:
      netbox_url: "{{ netbox_url }}"
      netbox_token: "{{ netbox_token }}"

  pre_tasks:
    - name: Check for Netbox URL
      ansible.builtin.fail:
        msg: "netbox_url is undefined"
      when: not netbox_url is defined

    - name: Check for Netbox Token
      ansible.builtin.fail:
        msg: "netbox_token is undefined"
      when: not netbox_token is defined

    - name: Check for Controller Host
      ansible.builtin.fail:
        msg: "controller_host is undefined"
      when: not controller_host is defined

    - name: Check for Controller OAuth Token
      ansible.builtin.fail:
        msg: "controller_oauth_token is undefined"
      when: not controller_oauth_token is defined

  tasks:
    # - name: Load JSON Test Data
    #   ansible.builtin.set_fact:
    #     ansible_eda: >-
    #       {{ ansible_eda | default({}) | combine(
    #         {
    #           'event': {
    #             'payload': {
    #               'data': (lookup('file', 'payload_test.json') | from_json)
    #             }
    #           }
    #         }
    #       ) }}

    - name: Parse received event to build API filter
      ansible.builtin.set_fact:
        parsed_api_filter: "{{ lookup('template', 'templates/config_context_webhook.j2') }}"
      when: ansible_eda.event.payload.data.is_active

    - name: Look up hosts using the updated config context in NetBox
      ansible.builtin.set_fact:
        target_hosts: "{{ lookup('netbox.netbox.nb_lookup', 'devices', api_filter=parsed_api_filter) | community.general.json_query('[*].value.name') | join(',') }}"
      when: parsed_api_filter is defined

    - name: Debug target hosts
      ansible.builtin.debug:
        msg: "{{ target_hosts }}"
      when: target_hosts is defined

    - name: Launch playbook to configure target hosts
      ansible.controller.job_launch:
        controller_host: "{{ controller_host }}"
        controller_oauthtoken: "{{ controller_oauth_token }}"
        job_template: Configure Demo Network from NetBox
        organization: Data-Driven-Demo
        limit: "{{ target_hosts }}"
        tags: "{{ tags | default(omit) }}"
        validate_certs: "{{ controller_verify_ssl | default(omit) }}"
