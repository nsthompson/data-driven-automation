---
- name: Deploy Containerlab Topology
  hosts: containerlab

  pre_tasks:
    - name: Validate topology_file is defined
      ansible.builtin.fail:
        msg: "topology_file is undefined"
      when: not topology_file is defined

    - name: Validate containerlab_mode is defined
      ansible.builtin.fail:
        msg: "containerlab_mode is undefined or not one of deploy, destroy, or inspect"
      when:
        - not containerlab_mode is defined
        - (containerlab_mode != 'deploy' or containerlab_mode != 'destroy' or containerlab_mode != 'inspect')

  tasks:
    - name: Validate Target Host Directory Exists
      ansible.builtin.file:
        path: "{{ 'topologies/' + lab_name }}"
        state: directory
        mode: "0755"
      when: containerlab_mode == "deploy"

    - name: Copy Topology File to Target Host
      ansible.builtin.copy:
        src: "{{ './' + topology_file }}"
        dest: "{{ 'topologies/' + lab_name + '/' + topology_file }}"
        mode: "0644"
      when: containerlab_mode == "deploy"

    - name: Deploy or Redeploy Containerlab Topology
      when: containerlab_mode == "deploy"
      block:
        - name: Validate Topology is Running # noqa: no-changed-when
          ansible.builtin.command:
            chdir: "{{ 'topologies/' + lab_name }}"
            cmd: containerlab inspect -f json
          register: inspect_result

        - name: Redeploy Containerlab Topology # noqa: no-changed-when
          ansible.builtin.command:
            chdir: "{{ 'topologies/' + lab_name }}"
            cmd: containerlab redeploy -f json
          register: redeploy_result
          when: inspect_result is defined

      rescue:
        - name: Deploy Containerlab Topology # noqa: no-changed-when
          ansible.builtin.command:
            chdir: "{{ 'topologies/' + lab_name }}"
            cmd: containerlab deploy -f json
          register: deploy_result

      always:
        - name: Debug Inspect Results
          ansible.builtin.debug:
            msg: "{{ inspect_result.stdout | from_json }}"
          when: inspect_result.stdout is defined and inspect_result is not failed

        - name: Debug Redeploy Results
          ansible.builtin.debug:
            msg: "{{ redeploy_result.stdout | from_json }}"
          when: redeploy_result.stdout is defined

        - name: Debug Deploy Results
          ansible.builtin.debug:
            msg: "{{ deploy_result.stdout | from_json }}"
          when: deploy_result.stdout is defined

    - name: Inspect Containerlab Topology # noqa: no-changed-when
      ansible.builtin.command:
        chdir: "{{ 'topologies/' + lab_name }}"
        cmd: containerlab inspect -f json
      register: inspect_result
      when: containerlab_mode == 'inspect'

    - name: Debug Inspect Results
      ansible.builtin.debug:
        msg: "{{ inspect_result.stdout | from_json }}"
      when: containerlab_mode == 'inspect'

    - name: Destroy Containerlab Topology # noqa: no-changed-when
      ansible.builtin.command:
        chdir: "{{ 'topologies/' + lab_name }}"
        cmd: containerlab destroy -c
      register: destroy_result
      when: containerlab_mode == 'destroy'

    - name: Debug Destroy Results
      ansible.builtin.debug:
        msg: "{{ destroy_result }}"
      when: containerlab_mode == 'destroy'
