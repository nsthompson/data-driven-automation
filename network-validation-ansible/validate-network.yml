---
- name: Playbook to validate network state against data in NetBox
  hosts: all
  gather_facts: false
  vars:
    netbox_url: "{{ lookup('ansible.builtin.env', 'NETBOX_API', default=undef()) }}"
    netbox_token: "{{ lookup('ansible.builtin.env', 'NETBOX_TOKEN', default=undef()) }}"

  module_defaults:
    group/netbox.netbox.netbox:
      netbox_url: "{{ netbox_url }}"
      netbox_token: "{{ netbox_token }}"

  pre_tasks:
    - name: Check for Netbox URL
      ansible.builtin.fail:
        msg: "netbox_url is undefined"
      when: not netbox_url is defined

    - name: Check for Netbox Token
      ansible.builtin.fail:
        msg: "netbox_token is undefined"
      when: not netbox_token is defined

  roles:
    - {role: validate_operational_state, tags: ['device', 'interface']}
    - {role: validate_device_neighbors, tags: ['device', 'interface']}
    - {role: validate_ospf_routing, tags: ['routing', 'interface']}
    - {role: validate_bgp_routing, tags: ['routing', 'interface']}

  post_tasks:
    - name: Aggregate results  # noqa: run-once[task]
      run_once: true
      ansible.builtin.set_fact:
        validation_results: "{{ lookup('template', './templates/validation_results.j2') }}"
      tags: always

    - name: Debug aggregate results  # noqa: run-once[task]
      run_once: true
      ansible.builtin.debug:
        msg: "{{ validation_results }}"
      tags: always

    - name: Debug failed tests  # noqa: run-once[task]
      run_once: true
      ansible.builtin.debug:
        msg: "{{ validation_results | find_failures }}"
      tags: always
